@model IEnumerable<DAL.Model.PM.Product>
@inject BLL.BLL.PM.IBrandBLL BrandBLL
@inject BLL.BLL.PM.IMainGroupBLL MainGroupBLL
@inject BLL.BLL.PM.ISubGroupBLL SubGroupBLL
@inject BLL.BLL.PM.ICategoryBLL CategoryBLL

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Admin/_FrontEndAdminLayout.cshtml";
    var listCate = await CategoryBLL.Get();
    var listBrand = await BrandBLL.Get();
    var listSubGroup = await SubGroupBLL.Get();
    var listMainGroup = await MainGroupBLL.Get();
}
<link href="~/css/Admin/brandadmin.css" rel="stylesheet" />
@*<body>
    <!-- morris JavaScript -->
    <script>
        $(document).ready(function () {
            //BOX BUTTON SHOW AND CLOSE
            jQuery('.small-graph-box').hover(function () {
                jQuery(this).find('.box-button').fadeIn('fast');
            }, function () {
                jQuery(this).find('.box-button').fadeOut('fast');
            });
            jQuery('.small-graph-box .box-close').click(function () {
                jQuery(this).closest('.small-graph-box').fadeOut(200);
                return false;
            });

            //CHARTS
            function gd(year, day, month) {
                return new Date(year, month - 1, day).getTime();
            }

            graphArea2 = Morris.Area({
                element: 'hero-area',
                padding: 10,
                behaveLikeLine: true,
                gridEnabled: false,
                gridLineColor: '#dddddd',
                axes: true,
                resize: true,
                smooth: true,
                pointSize: 0,
                lineWidth: 0,
                fillOpacity: 0.85,
                data: [
                    { period: '2015 Q1', iphone: 2668, ipad: null, itouch: 2649 },
                    { period: '2015 Q2', iphone: 15780, ipad: 13799, itouch: 12051 },
                    { period: '2015 Q3', iphone: 12920, ipad: 10975, itouch: 9910 },
                    { period: '2015 Q4', iphone: 8770, ipad: 6600, itouch: 6695 },
                    { period: '2016 Q1', iphone: 10820, ipad: 10924, itouch: 12300 },
                    { period: '2016 Q2', iphone: 9680, ipad: 9010, itouch: 7891 },
                    { period: '2016 Q3', iphone: 4830, ipad: 3805, itouch: 1598 },
                    { period: '2016 Q4', iphone: 15083, ipad: 8977, itouch: 5185 },
                    { period: '2017 Q1', iphone: 10697, ipad: 4470, itouch: 2038 },

                ],
                lineColors: ['#eb6f6f', '#926383', '#eb6f6f'],
                xkey: 'period',
                redraw: true,
                ykeys: ['iphone', 'ipad', 'itouch'],
                labels: ['All Visitors', 'Returning Visitors', 'Unique Visitors'],
                pointSize: 2,
                hideHover: 'auto',
                resize: true
            });


        });
    </script>
    <!-- calendar -->
    <script type="text/javascript">
        $(window).load(function () {

            $('#mycalendar').monthly({
                mode: 'event',

            });

            $('#mycalendar2').monthly({
                mode: 'picker',
                target: '#mytarget',
                setWidth: '250px',
                startHidden: true,
                showTrigger: '#mytarget',
                stylePast: true,
                disablePast: true
            });

            switch (window.location.protocol) {
                case 'http:':
                case 'https:':
                    // running on a server, should be good.
                    break;
                case 'file:':
                    alert('Just a heads-up, events will not work when run locally.');
            }

        });
    </script>
</body>>*@


<h2 class="titlename">Danh Sách Sản Phẩm</h2>
<input type="text" placeholder="Bạn muốn tìm gì" />
<div class="editbtn">
    <button type="button" class="btn-info fa fa-search btnsearch" aria-hidden="true"> Tìm kiếm</button>
    <button type="button" class="btn-danger fa fa-plus btnadd" onclick="window.location.href='/Product/AddProduct'"> Thêm mới</button>
</div>
<div class="cmbbrand">
    <form asp-action="AddProduct" enctype="multipart/form-data">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="mainindex">
            <label class="control-label">Ngành hàng chính</label>
        </div>
        <select asp-items="@(new SelectList(listMainGroup,"ID","Name"))">
            <option selected="selected" value="">Please select</option>
        </select>


        <div class="subindex">
            <label class="control-label">Ngành hàng phụ</label>
        </div>
        <div class="subsel">
            <select asp-items="@(new SelectList(listSubGroup,"ID","Name"))">
                <option selected="selected" value="">Please select</option>
            </select>
        </div>
        <span class="text-danger"></span>

        <div class="brandindex">
            <label class="control-label">Thương hiệu</label>
        </div>
        <div class="brandsel">
            <select asp-items="@(new SelectList(listBrand,"ID","Name"))">
                <option selected="selected" value="">Please select</option>
            </select>
        </div>
        <span class="text-danger"></span>

        <div class="cateindex">
            <label class="control-label">Loại</label>
        </div>
        <div class="catesel">
            <select asp-items="@(new SelectList(listCate,"ID","Name"))">
                <option selected="selected" value="">Please select</option>
            </select>
        </div>
        <span class="text-danger"></span>

    </form>
</div>
<div class="tablebrand">
    <table>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StockMin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isOnlineOnly)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DefaultImage)
            </th>
            <th></th>
        </tr>
    </table>
</div>
<table class="tabledisplay">
    @foreach (var item in Model)
    {
        <tr>
            <th>
                <a>  @Html.DisplayFor(modelItem => item.Model)</a>
            </th>
            <th>
                @Html.DisplayFor(modelItem => item.StockMin)
            </th>
            <th>
                <div class="notdisplay">
                    @Html.DisplayFor(modelItem => item.isOnlineOnly)
                </div>

            </th>
            <th>
                <img src=@Url.Content(item.DefaultImage) />
            </th>
            <th>
                <div class="suabtn">
                    <button type="button" class="btn-success fa fa-pencil btnedit"> Sửa</button>
                </div>
                <div class="delbtn fa fa-trash">
                    @await Html.PartialAsync("~/Views/Component/ConfirmPopup.cshtml", item.ID)
                </div>
            </th>
        </tr>
    }
</table>
@await Html.PartialAsync("~/Views/Component/Pagination.cshtml", new Aoo.ViewModels.Component.PaginationModel { currentPage = ViewBag.currentPage, totalPage = ViewBag.totalPage });
<script src="~/js/Admin/PM/scripts.js"></script>




