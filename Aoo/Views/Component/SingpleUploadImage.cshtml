@model Aoo.ViewModels.Component.SingleUploadImageModel ;
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860

*@
@{ 
    string defaultImage = Model.DefaultImage == string.Empty ? "" : Model.DefaultImage;
}
<style>
    .uploader {
        position: relative;
        overflow: hidden;
        width: 20em;
        height: 10em;
        display: -webkit-box;
        display: -moz-box;
        display: -ms-flexbox;
        /* display: -webkit-flex; */
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f3f3f3;
        border: 2px dashed #e8e8e8;
    }

    #filePhoto {
        position: absolute;
        width: 300px;
        height: 400px;
        top: -50px;
        left: 0;
        z-index: 2;
        opacity: 0;
        cursor: pointer;
    }

    .uploader > #imagereview {
        position: absolute;
        width: 100%;
        height: 100%;
        top: -1px;
        left: -1px;
        z-index: 1;
        border: none;
    }

    .uploader > #UploadIconImages {
        width: 30%;
        height: auto;
    }
</style>

<div class="uploader">
    <img src="~/images/Graphicloads-100-Flat-Upload.ico" id="UploadIconImages" />
    <img id="imagereview" src="@Url.Content(defaultImage)" />
    <input type="file" name="@Model.Name" id="filePhoto" />
</div>
<script type="text/javascript">
    $(document).ready(function () {
        if ($('#imagereview').attr('src') == "") {
            $('#imagereview').css('display', 'none');

        }

        var imageLoader = document.getElementById('filePhoto');
        imageLoader.addEventListener('change', handleImage);
        function handleImage(e) {
            var reader = new FileReader();
            reader.onload = function (event) {
                $('.uploader #imagereview').attr('src', event.target.result);
                $('.uploader #imagereview').css('display', 'block');
                $('.uploader #UploadIconImages').css('display', 'none');

            }
            reader.readAsDataURL(e.target.files[0]);
        }
        $('.uploader').click(function () {
            //  $('#filePhoto').click()

        })



    });
    function SendFormData(callback) {
        var data;
        data = new FormData();
        var file = $('#filePhoto')[0].files[0];
        data.append('files', file);
        SendFormData(data);
        // You can abort the upload by calling jqxhr.abort();
        var jqxhr = $.ajax({
            url: "/api/Image/UploadImage",
            type: "POST",
            contentType: false,
            data: data,
            dataType: "json",
            cache: false,
            processData: false,
            async: false,
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                xhr.upload.addEventListener("progress",
                    function (evt) {
                        if (evt.lengthComputable) {
                            var progress = Math.round((evt.loaded / evt.total) * 100);

                            // Do something with the progress
                        }
                    },
                    false);
                return xhr;
            }
        })
            .done(function (data, textStatus, jqXhr) {
                alert("Uploading is done");
                console.log(data);
                if (data.success == "true") {
                    callback(data)

                }
                else {
                    alert("Uploading image is not success");

                }
                // Clear the input
            })
            .fail(function (jqXhr, textStatus, errorThrown) {
                if (errorThrown === "abort") {
                    alert("Uploading was aborted");
                } else {
                    alert("Uploading failed");
                }
            })
            .always(function (data, textStatus, jqXhr) { });
    };


</script>